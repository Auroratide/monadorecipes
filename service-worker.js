const s=location.pathname.split("/").slice(0,-1).join("/"),p=[s+"/_app/immutable/entry/app.rxlAGO--.js",s+"/_app/immutable/nodes/0.BRKney56.js",s+"/_app/immutable/nodes/1.UNUwH9qW.js",s+"/_app/immutable/nodes/2.Or2SUro-.js",s+"/_app/immutable/nodes/3.D_2uWMoS.js",s+"/_app/immutable/assets/3.50ZT2CVI.css",s+"/_app/immutable/nodes/4.Bs3qqZJl.js",s+"/_app/immutable/nodes/5.JM8emAxo.js",s+"/_app/immutable/nodes/6.CpAtpoFs.js",s+"/_app/immutable/assets/6.BYuM_HAR.css",s+"/_app/immutable/nodes/7.BgM0LjBd.js",s+"/_app/immutable/assets/7.BlOsK_cq.css",s+"/_app/immutable/assets/Page.D4bvB4Fl.css",s+"/_app/immutable/assets/BasicPanel.BJaGI5Pc.css",s+"/_app/immutable/assets/site-info.C-8bK6aa.css",s+"/_app/immutable/assets/TitledPanel.DW25d2t-.css",s+"/_app/immutable/assets/2.DhtYpPY1.css",s+"/_app/immutable/assets/TriangleCorners.DkpYnALV.css",s+"/_app/immutable/assets/Button.DoVOtqjH.css",s+"/_app/immutable/assets/Elevated.COSiYApc.css",s+"/_app/immutable/assets/ResponsiveImage.DOJNRpsG.css",s+"/_app/immutable/assets/NoPrint.BP2WViEx.css",s+"/_app/immutable/assets/BuildOpenGraph.D1UB_722.css",s+"/_app/immutable/chunks/-KWSUFJX.js",s+"/_app/immutable/chunks/B2OE3CoD.js",s+"/_app/immutable/chunks/B4IdIKwg.js",s+"/_app/immutable/chunks/B615zcsV.js",s+"/_app/immutable/chunks/BLdLDLYH.js",s+"/_app/immutable/chunks/BaTJIF4k.js",s+"/_app/immutable/chunks/C1FmrZbK.js",s+"/_app/immutable/chunks/CYgJF_JY.js",s+"/_app/immutable/chunks/Ct9U7uJO.js",s+"/_app/immutable/assets/titans.DNzR8eNG.webp",s+"/_app/immutable/assets/torna-camp.DGa5Qz1T.webp",s+"/_app/immutable/assets/zeon.DHJC1jjK.webp",s+"/_app/immutable/chunks/D5tsbBkz.js",s+"/_app/immutable/chunks/DQfWXNEO.js",s+"/_app/immutable/chunks/Dh1A8VOV.js",s+"/_app/immutable/chunks/Dsy0j02G.js",s+"/_app/immutable/chunks/JaYvdB58.js",s+"/_app/immutable/chunks/WQkHbcLO.js",s+"/_app/immutable/chunks/ayMe7FYC.js",s+"/_app/immutable/chunks/uEfAKzo_.js",s+"/_app/immutable/chunks/lqPXTXtE.js",s+"/_app/immutable/entry/start.X6zpSFKu.js"],m="1744500078090",t=`monadorecipes-${m}`,i=async()=>{await(await caches.open(t)).addAll(p)};self.addEventListener("install",a=>a.waitUntil(i()));const l=async()=>{const a=await caches.keys();await Promise.all(a.map(e=>{if(e!==t)return caches.delete(e)}))};self.addEventListener("activate",a=>a.waitUntil(l()));self.addEventListener("fetch",()=>{});
