const s=location.pathname.split("/").slice(0,-1).join("/"),p=[s+"/_app/immutable/entry/app.BM-MXuIQ.js",s+"/_app/immutable/nodes/0.CnM82H2A.js",s+"/_app/immutable/nodes/1.DowDBxAv.js",s+"/_app/immutable/nodes/2.DFx1O41N.js",s+"/_app/immutable/nodes/3.De1WIu0k.js",s+"/_app/immutable/assets/3.50ZT2CVI.css",s+"/_app/immutable/nodes/4.DvTuLrQp.js",s+"/_app/immutable/nodes/5.BeRAZsCg.js",s+"/_app/immutable/nodes/6.CnlEnfmY.js",s+"/_app/immutable/assets/6.BYuM_HAR.css",s+"/_app/immutable/nodes/7.qKf5F1QK.js",s+"/_app/immutable/assets/7.BlOsK_cq.css",s+"/_app/immutable/assets/Page.D4bvB4Fl.css",s+"/_app/immutable/assets/BasicPanel.BJaGI5Pc.css",s+"/_app/immutable/assets/site-info.C-8bK6aa.css",s+"/_app/immutable/assets/TitledPanel.DW25d2t-.css",s+"/_app/immutable/assets/2.DhtYpPY1.css",s+"/_app/immutable/assets/TriangleCorners.DkpYnALV.css",s+"/_app/immutable/assets/Button.DoVOtqjH.css",s+"/_app/immutable/assets/Elevated.COSiYApc.css",s+"/_app/immutable/assets/ResponsiveImage.DOJNRpsG.css",s+"/_app/immutable/assets/NoPrint.BP2WViEx.css",s+"/_app/immutable/assets/BuildOpenGraph.D1UB_722.css",s+"/_app/immutable/chunks/B4IdIKwg.js",s+"/_app/immutable/chunks/BLdLDLYH.js",s+"/_app/immutable/chunks/BmnU12mE.js",s+"/_app/immutable/chunks/C1FmrZbK.js",s+"/_app/immutable/chunks/C6P9yoFa.js",s+"/_app/immutable/chunks/CTuyvRix.js",s+"/_app/immutable/chunks/CYgJF_JY.js",s+"/_app/immutable/chunks/Cp0kvQXv.js",s+"/_app/immutable/chunks/D5_h5NL3.js",s+"/_app/immutable/chunks/DBC5HsET.js",s+"/_app/immutable/chunks/DQfWXNEO.js",s+"/_app/immutable/chunks/DaAZe1Uw.js",s+"/_app/immutable/chunks/DbNXjpvm.js",s+"/_app/immutable/chunks/Dh1A8VOV.js",s+"/_app/immutable/chunks/Dwp778pX.js",s+"/_app/immutable/chunks/JaYvdB58.js",s+"/_app/immutable/chunks/erCHG8zD.js",s+"/_app/immutable/assets/titans.DNzR8eNG.webp",s+"/_app/immutable/assets/torna-camp.DGa5Qz1T.webp",s+"/_app/immutable/assets/zeon.DHJC1jjK.webp",s+"/_app/immutable/chunks/lqPXTXtE.js",s+"/_app/immutable/entry/start.c5i60BDV.js"],m="1741091768040",t=`monadorecipes-${m}`,i=async()=>{await(await caches.open(t)).addAll(p)};self.addEventListener("install",a=>a.waitUntil(i()));const l=async()=>{const a=await caches.keys();await Promise.all(a.map(e=>{if(e!==t)return caches.delete(e)}))};self.addEventListener("activate",a=>a.waitUntil(l()));self.addEventListener("fetch",()=>{});
