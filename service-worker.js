const a=location.pathname.split("/").slice(0,-1).join("/"),p=[a+"/_app/immutable/entry/app.DS2oy72M.js",a+"/_app/immutable/nodes/0.CAOniwS4.js",a+"/_app/immutable/nodes/1.Drvm8kOE.js",a+"/_app/immutable/nodes/2.l8AxAsWq.js",a+"/_app/immutable/nodes/3.BQIEXO_O.js",a+"/_app/immutable/nodes/4.Ba3mfDqr.js",a+"/_app/immutable/nodes/5.CGT3Rk0c.js",a+"/_app/immutable/nodes/6.Dj1G4QC0.js",a+"/_app/immutable/assets/6.DTvSpfpX.css",a+"/_app/immutable/nodes/7.DvGaX2UO.js",a+"/_app/immutable/assets/7.CN4dEaYu.css",a+"/_app/immutable/assets/2.BJror0dI.css",a+"/_app/immutable/chunks/2.BwC4tXpE.js",a+"/_app/immutable/assets/BasicPanel.0VJMdoZr.css",a+"/_app/immutable/chunks/BasicPanel.BP3CF1sU.js",a+"/_app/immutable/assets/BuildOpenGraph.DyOG7YPU.css",a+"/_app/immutable/chunks/BuildOpenGraph.DotFy1VP.js",a+"/_app/immutable/assets/Button.D7EIqouS.css",a+"/_app/immutable/chunks/Button.DWpZk5IC.js",a+"/_app/immutable/assets/Elevated.BjYdhDS7.css",a+"/_app/immutable/chunks/Elevated.DIi0Xf0v.js",a+"/_app/immutable/assets/Page.FDXQsk6L.css",a+"/_app/immutable/chunks/Page.CLA1kDpE.js",a+"/_app/immutable/assets/TitledPanel.MfPTpMpX.css",a+"/_app/immutable/chunks/TitledPanel.DvZCm794.js",a+"/_app/immutable/assets/TriangleCorners.DrvzPA-P.css",a+"/_app/immutable/chunks/TriangleCorners.DCj9NdBQ.js",a+"/_app/immutable/chunks/control.CYgJF_JY.js",a+"/_app/immutable/chunks/entry.BENee_17.js",a+"/_app/immutable/chunks/index.DkAvxXcx.js",a+"/_app/immutable/chunks/paths.BvOBO1lo.js",a+"/_app/immutable/chunks/preload-helper.C1FmrZbK.js",a+"/_app/immutable/chunks/scheduler.9wOHTztG.js",a+"/_app/immutable/assets/site-info.GdYKxjrZ.css",a+"/_app/immutable/chunks/site-info.DKgGsa-k.js",a+"/_app/immutable/assets/titans.DNzR8eNG.webp",a+"/_app/immutable/assets/torna-camp.DGa5Qz1T.webp",a+"/_app/immutable/assets/zeon.DHJC1jjK.webp",a+"/_app/immutable/chunks/define.lqPXTXtE.js",a+"/_app/immutable/entry/start.CaHmhHMv.js"],m="1735142403551",t=`monadorecipes-${m}`,i=async()=>{await(await caches.open(t)).addAll(p)};self.addEventListener("install",s=>s.waitUntil(i()));const l=async()=>{const s=await caches.keys();await Promise.all(s.map(e=>{if(e!==t)return caches.delete(e)}))};self.addEventListener("activate",s=>s.waitUntil(l()));self.addEventListener("fetch",()=>{});
