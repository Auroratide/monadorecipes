const a=location.pathname.split("/").slice(0,-1).join("/"),p=[a+"/_app/immutable/entry/app.B6NNwq9K.js",a+"/_app/immutable/nodes/0.yN_3AnmV.js",a+"/_app/immutable/nodes/1.DQC83vjc.js",a+"/_app/immutable/nodes/2.BRhKAQ0i.js",a+"/_app/immutable/nodes/3.PFeW52mZ.js",a+"/_app/immutable/nodes/4.DUmkWwbd.js",a+"/_app/immutable/nodes/5.C35MkOi4.js",a+"/_app/immutable/nodes/6.DDTRcSBO.js",a+"/_app/immutable/assets/6.C9JFDH7E.css",a+"/_app/immutable/nodes/7.bTkWF0BS.js",a+"/_app/immutable/assets/7.CN4dEaYu.css",a+"/_app/immutable/assets/2.BJror0dI.css",a+"/_app/immutable/chunks/2.NGTeNnUJ.js",a+"/_app/immutable/assets/BasicPanel.0VJMdoZr.css",a+"/_app/immutable/chunks/BasicPanel.C6bdwHkM.js",a+"/_app/immutable/assets/BuildOpenGraph.DyOG7YPU.css",a+"/_app/immutable/chunks/BuildOpenGraph.8Ra7iPVe.js",a+"/_app/immutable/assets/Button.D7EIqouS.css",a+"/_app/immutable/chunks/Button.DwbcBmaz.js",a+"/_app/immutable/assets/Elevated.BjYdhDS7.css",a+"/_app/immutable/chunks/Elevated.DIi0Xf0v.js",a+"/_app/immutable/assets/Page.6PHwbXg8.css",a+"/_app/immutable/chunks/Page.Dxbeps2B.js",a+"/_app/immutable/assets/TitledPanel.MfPTpMpX.css",a+"/_app/immutable/chunks/TitledPanel.JbQxOaa0.js",a+"/_app/immutable/assets/TriangleCorners.DrvzPA-P.css",a+"/_app/immutable/chunks/TriangleCorners.DCj9NdBQ.js",a+"/_app/immutable/chunks/control.CYgJF_JY.js",a+"/_app/immutable/chunks/entry.GuaGGNo5.js",a+"/_app/immutable/chunks/index.SbCoN3ZO.js",a+"/_app/immutable/chunks/paths.DkB0nNxx.js",a+"/_app/immutable/chunks/preload-helper.C1FmrZbK.js",a+"/_app/immutable/chunks/scheduler.wWRv3e7z.js",a+"/_app/immutable/assets/site-info.BuvBo4R0.css",a+"/_app/immutable/chunks/site-info.0levh1Cy.js",a+"/_app/immutable/assets/titans.DNzR8eNG.webp",a+"/_app/immutable/assets/torna-camp.DGa5Qz1T.webp",a+"/_app/immutable/assets/zeon.DHJC1jjK.webp",a+"/_app/immutable/chunks/define.B8oekSMV.js",a+"/_app/immutable/entry/start.DO2uhTyF.js"],m="1727133071550",t=`monadorecipes-${m}`,i=async()=>{await(await caches.open(t)).addAll(p)};self.addEventListener("install",s=>s.waitUntil(i()));const n=async()=>{const s=await caches.keys();await Promise.all(s.map(e=>{if(e!==t)return caches.delete(e)}))};self.addEventListener("activate",s=>s.waitUntil(n()));self.addEventListener("fetch",()=>{});
